<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.CostMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.CostModel">
        <constructor>
            <idArg column="CostId" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="ProjectId" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="CostNumber" javaType="java.lang.Float" jdbcType="FLOAT" />
            <arg column="CostTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="CostDetail" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="PictureId" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>


    <sql id="Base_Column_List">
    CostId,ProjectId,CostNumber,CostTime,CostDetail,PictureId
</sql>

    <insert id="AddCost">
        insert into Cost(CostId,ProjectId,CostNumber,CostTime,CostDetail,PictureId)
        values (#{CostId},#{ProjectId},#{CostNumber},#{CostTime},#{CostDetail},#{PictureId})
    </insert>


    <select id="SelectNumberByProjectId" resultType="java.lang.Float">
        select sum(CostNumber)
        from Cost
        where ProjectId =#{ProjectId}
    </select>


    <select id="GetCostByCostId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from Cost
        where CostId=#{CostId}
    </select>


    <select id="GetCostListByProjectId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from Cost
        where ProjectId=#{ProjectId}
    </select>


    <update id="ChangeCost">
        update cost set ProjectId=#{ProjectId},CostNumber=#{CostNumber},CostTime=#{CostTime},CostDetail=#{CostDetail},PictureId=#{PictureId}
        where CostId=#{CostId}
    </update>


    <delete id="DeleteId">
        delete from cost
        where costId=#{CostId}
    </delete>
</mapper>